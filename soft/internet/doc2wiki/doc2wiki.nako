※【なでしこ実行モード】cnako
■WikiWikiとは
    ・WORDHTML変換(WORDをHTMLに)〜
　　　　自身→WORDHTML変換開始フック
　　　　「Dim objWord
Set objWord = CreateObject("Word.Application")
'objWord.Visible = True

Set objDoc = objWord.Documents.Open("{WORD}")
Set objSelection = objWord.Selection
    
objDoc.SaveAs "{HTML}", 8 'wdFormatHTML
    
objWord.Quit 0,0
Set objWord = Nothing」をVBSCRIPTコード追加
　　　　自身→WORDHTML変換終了フック
　　　　
    ・WORDアップロード(PAGEにWORDを)〜
　　　　WORDを「.html」に拡張子変更し，HTMLに代入
　　　　自身→WORDHTML変換(WORD,HTML)
　　　　0.1秒待つ
　　　　自身→HTMLアップロード(PAGE,HTML)
　　　　PAGEにWORDをアップロード
    
    ・HTMLアップロード(PAGEにHTMLを)〜
　　　　自身→HTMLWIKI変換開始フック

　　　　HTMLを「.files」に拡張子変更し，FILESフォルダに代入
　　　　目次未出力ははい
　　　　HTMLを読む
　　　　「body」のタグ切り出し，コンテンツに代入
    
　　　　コンテンツの改行を空に置換
　　　　「</p>」を「</p>{改行}」に置換
　　　　コンテンツはそれ
　　
　　　　出力内容は空
　　　　コンテンツを反復
　　　　　　もし(対象が『<p.*class=MsoToc[1-9].*</p>』に正規表現マッチ)ならば
　　　　　　　　もし，目次未出力ならば，出力内容に目次を配列追加
　　　　　　　　目次未出力はいいえ
　　　　　　　　続ける
　　　　
　　　　　　#画像の表示
　　　　　　それは対象
　　　　　　それの『<v:imagedata.*src=".*\.files\/([^"]*)".*\/>』を自身＠拡大画像へ正規表現置換
　　　　　　それの『<img.*?src=".*?\.files\/([^"]*)".*?>』を自身＠画像プラグインへ正規表現置換
　　　　
　　　　　　#フィールドの設定の削除
　　　　　　それの『<\!--\[if supportFields\]>.*?<\!\[endif\]-->』を空へ正規表現置換
　　　　
　　　　　　#リストの作成
　　　　　　それの『<\!\[if \!supportLists\]>.*?<\!\[endif\]>』を空へ正規表現置換
　　　　　　それの『<p.*?style='.*?mso-list:l0 level1.*?'.*?>』を(自身→番号付きリスト(1))へ正規表現置換
　　　　　　それの『<p.*?style='.*?mso-list:l0 level2.*?'.*?>』を(自身→番号付きリスト(2))へ正規表現置換
　　　　　　それの『<p.*?style='.*?mso-list:l0 level3.*?'.*?>』を(自身→番号付きリスト(3))へ正規表現置換
　　　　　　それの『<p.*?style='.*?mso-list:l1 level1.*?'.*?>』を(自身→番号無しリスト(1))へ正規表現置換
　　　　　　それの『<p.*?style='.*?mso-list:l1 level2.*?'.*?>』を(自身→番号無しリスト(2))へ正規表現置換
　　　　　　それの『<p.*?style='.*?mso-list:l1 level3.*?'.*?>』を(自身→番号無しリスト(3))へ正規表現置換
　　　　
　　　　　　#見出しの作成
　　　　　　それの『<h1.*?>(.*?)</h1>』を(自身→見出し(1))へ正規表現置換
　　　　　　それの『<h2.*?>(.*?)</h2>』を(自身→見出し(2))へ正規表現置換
　　　　　　それの『<h3.*?>(.*?)</h3>』を(自身→見出し(3))へ正規表現置換
　　　　
　　　　　　#イタリック
　　　　　　それの『<i.*?>(.*?)</i>』を自身＠イタリックへ正規表現置換
　　　　
　　　　　　#ボールド
　　　　　　それの『<b.*?>(.*?)</b>』を自身＠ボールドへ正規表現置換
　　　　
　　　　　　#下線
　　　　　　それの『<u.*?>(.*?)</u>』を自身＠下線へ正規表現置換
　　　　
　　　　　　#取消線
　　　　　　それの『<s.*?>(.*?)</s>』を自身＠取り消し線へ正規表現置換
　　　　
　　　　　　#タグ除去
　　　　　　それの「<[^>]*>」を空へ正規表現置換
　　　　　　それの「^\s+」を空へ正規表現置換
　　　　
　　　　　　それの『&nbsp;』を空に置換
　　　　　　出力行はそれ
　　　　　　出力内容に出力行を配列追加
    
　　　　#出力内容を
　　　　
    　　#デバッグ
　　　　出力内容に(自身＠フッター)を配列追加
　　　　自身→HTMLWIKI変換終了フック

　　　　PAGEに出力内容をページ保存
　　　　    
　　　　「{FILESフォルダ}\image*.*」のファイル列挙し，画像リストに代入　　
　　　　画像リストを反復
　　　　　　秒待つ(0.01)
　　　　　　PAGEに「{FILESフォルダ}\{対象}」をアップロード
　　　　
　　・ページ保存(ページに内容を)〜
　　　　自身→記事アップロード開始フック(ページ)
　　　　自身→ページ保存(ページ,内容)
　　　　自身→記事アップロード終了フック(ページ)
　　　　
　　・アップロード(ページにファイルを)〜
　　　　自身→ファイルアップロード開始フック(PAGE,対象)
　　　　自身→アップロード(ページ, ファイル)
　　　　自身→ファイルアップロード終了フック(PAGE,対象)

#PukiWiki - http://pukiwiki.sourceforge.jp/
■PukiWikiとは　＋WikiWiki
　　・URL
　　・パスワード
　　・文字コード{＝「euc」}
　　・内部コード{＝「sjis」}
　　・文字コード変換({文字列=?}Sを)〜
　　	Sを内部コードから文字コードへシステム:文字コード変換し、戻す
　　・ページ保存(ページに内容を)〜
　　	#現在のページ内容を取得
　　	値＝空
　　	値＠「cmd」＝「edit」
　　	値＠「page」＝(ページを文字コード変換)
　　	URLへ値をHTTP簡易ポスト
　　	#ダイジェストを取得
　　	「name="digest" value="([0-9a-fA-F]+)"」で正規表現マッチ
　　	ダイジェストは抽出文字列[0]
　　	#送信
　　　　値＝空
　　　　値＠「encode_hint」=(「ぷ」を文字コード変換)
　　　　値＠「cmd」=「edit」
　　　　値＠「page」=(ページを文字コード変換)
　　　　値＠「msg」=(内容を文字コード変換)
　　　　値＠「write」=「ページの更新」
　　　　値＠「digest」=ダイジェスト
　　　　URLへ値をHTTP簡易ポスト
　　・ページ削除(ページを)〜ページに空をページ保存
　　・アップロード(ページにファイルを)〜
　　　　値＝空
　　　　値＠「encode_hint」=(「ぷ」を文字コード変換)
　　　　値＠「plugin」＝「attach」
　　　　値＠「pcmd」＝「post」
　　　　値＠「pass」＝パスワード
　　　　値＠「refer」=(ページを文字コード変換)
　　　　ファイルを作業フォルダ取得で相対パス展開し、ファイルへ代入
　　　　ファイル名=(ファイルからファイル名抽出し、それを文字コード変換)
　　　　値＠「attach_file」＝「@file={ファイル};{ファイル名}」
　　　　URLへ値をHTTP簡易ポスト
　　・見出し(レベル)〜「{改行}{『*』をレベルだけリフレイン}$1{改行}」を戻す　
　　・番号付きリスト(レベル)〜「{『+』をレベルだけリフレイン}」を戻す　
　　・番号無しリスト(レベル)〜「{『-』をレベルだけリフレイン}」を戻す
　　・イタリック{＝「 '''$1''' 」}
　　・ボールド{＝「 ''$1'' 」}
　　・下線{＝「$1」}
　　・取り消し線{＝「 %%$1%% 」}
　　・目次{＝『\#contents』}
　　・水平線{＝『----』}
　　・拡大画像{＝『\n\#ref($1,noimg)\n』}
　　・画像プラグイン{＝『\n\#ref($1)\n』}
　　・ファイルプラグイン{＝『\n\#ref($1)\n』}
　　・WORDHTML変換開始フック〜「HTML形式に変換中...」と継続表示
　　・WORDHTML変換終了フック〜「完了」と表示
　　・HTMLWIKI変換開始フック〜「Wiki形式に変換中...」と継続表示
　　・HTMLWIKI変換終了フック〜「完了」と表示
　　・記事アップロード開始フック(ページ)〜「『{ページ}』へ記事をアップロード中...」と継続表示
　　・記事アップロード終了フック(ページ)〜「完了」と表示
　　・ファイルアップロード開始フック(ページ,ファイル)〜「『{ページ}』へ『{ファイル}』をアップロード中...」と継続表示
　　・ファイルアップロード終了フック(ページ,ファイル)〜「完了」と表示
　　・フッター

CNAKOモード＝「EXE」

ユーザーホームフォルダのMD5取得してマスターパスワードに代入

「{母艦パス}doc2wiki.ini」のINI開いてHに代入
Hで「doc2wiki」の「WIKITYPE」をINI読んでWIKITYPEに代入
もし、WIKITYPEが空ならば
　　「Wikiの種類:」を入力してWIKITYPEに代入
　　Hで「doc2wiki」の「WIKITYPE」にWIKITYPEをINI書く

Hで「doc2wiki」の「URL」をINI読んでURLに代入
もし、URLが空ならば
　　「WikiのURL:」を入力してURLに代入
　　Hで「doc2wiki」の「URL」にURLをINI書く

Hで「doc2wiki」の「ENCODING」をINI読んでENCODINGに代入
もし、ENCODINGが空ならば
　　「Wikiの文字コード:」を入力してENCODINGに代入
　　Hで「doc2wiki」の「ENCODING」にENCODINGをINI書く

Hで「doc2wiki」の「PASS」をINI読んでPASSに代入
もし、PASSが空ならば
　　「管理者パスワード:」を入力してPASSに代入
　　PASSをマスターパスワードでBLOWFISH暗号化
　　BASE64エンコードし、PASSに代入
　　Hで「doc2wiki」の「PASS」にPASSをINI書く
　　
HのINI閉じる

wikiとはPukiWiki
wiki＠「URL」は(URL)
PASSをBASE64デコード
それをマスターパスワードでBLOWFISH復号化
wiki＠パスワードはそれ
wiki＠文字コードはENCODING
ファイル選択し，DOCファイルに代入
もし、DOCファイルが空ならば
　　終わる
DOCファイルを空に拡張子変更
それからファイル名抽出し，ページ名に代入

DOCファイルからファイル名抽出
それの『(.*)』をwiki＠ファイルプラグインへ正規表現置換
元ファイルリンクはそれ
wiki＠フッターは「{wiki＠水平線}
この文章はdoc2wikiによって自動生成されました。
元になったファイルは{元ファイルリンク}を参照してください」
wiki→WORDアップロード(ページ名,DOCファイル)

「アップロード完了．何かキーを押すと終了します・・・」と表示
終わる

