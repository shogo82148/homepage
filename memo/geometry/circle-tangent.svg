<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="400" height="300" xmlns="http://www.w3.org/2000/svg">
<g stroke="black" stroke-width="2" fill="white">
	<line id="line" stroke="red" />
	<circle id="circle" fill="none" />
	<circle id="point" />
</g>
<script type="text/ecmascript"><![CDATA[
	var $ = function(id) {
		return document.getElementById(id);
	}
	var line = $('line');
	var circle = $('circle');
	var w = document.documentElement.getAttribute('width')-0;
	var h = document.documentElement.getAttribute('height')-0;
	
	function Circle() {
		var minr = 30;
		var maxr = w;
		this.x = Math.random() * (w-minr*2) + minr;
		this.y = Math.random() * (h-minr*2) + minr;
		if(maxr>this.x) maxr = this.x;
		if(maxr>this.y) maxr = this.y;
		if(maxr>w-this.x) maxr = w-this.x;
		if(maxr>h-this.y) maxr = h-this.y;
		this.r = Math.random() * (maxr-minr) + minr;
	}
	
	function setLine(l, x1, y1, x2, y2) {
		l.setAttribute('x1', x1);
		l.setAttribute('y1', y1);
		l.setAttribute('x2', x2);
		l.setAttribute('y2', y2);
	}
	
	function setCircle(c, x, y, r) {
		c.setAttribute('cx', x);
		c.setAttribute('cy', y);
		c.setAttribute('r', r);
	}
	
	var sc = new Circle(), ec = new Circle();
	var count = 0, maxcount = 30;
	
	setInterval('animate();', 100);
	
	function animate() {
		var t = count / maxcount;
		var tt = 1-t;
		var theta = tt*2*Math.PI;
		
		var c = {
			'x' : tt*sc.x + t*ec.x,
			'y' : tt*sc.y + t*ec.y,
			'r' : tt*sc.r + t*ec.r,
		}
		
		var p = {
			x: c.x+c.r*Math.cos(theta),
			y: c.y+c.r*Math.sin(theta)
		}
		
		setCircle(circle, c.x, c.y, c.r);
		setCircle($('point'), p.x, p.y, 5);
		setLine(line, p.x+(w+h)*Math.sin(theta), p.y-(w+h)*Math.cos(theta),
				p.x-(w+h)*Math.sin(theta), p.y+(w+h)*Math.cos(theta));
		
		count++;
		if(count>maxcount) {
			sc = ec;
			ec = new Circle();
			count = 0;
		}
	}
]]></script>
</svg>
