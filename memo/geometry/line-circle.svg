<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="400" height="300" xmlns="http://www.w3.org/2000/svg">
<g stroke="black" stroke-width="2" fill="white">
	<line id="line" />
	<circle id="circle" fill="none" />
	<circle id="point1" stroke="red" />
	<circle id="point2" stroke="red" />
</g>
<script type="text/ecmascript"><![CDATA[
	var $ = function(id) {
		return document.getElementById(id);
	}
	var line = $('line');
	var circle = $('circle');
	var w = document.documentElement.getAttribute('width')-0;
	var h = document.documentElement.getAttribute('height')-0;
	
	function Line() {
		this.x = Math.random() * w;
		this.y = Math.random() * h;
		this.theta = Math.random() * 2 * Math.PI;
	}
	
	function Circle() {
		var minr = 60;
		var maxr = w;
		this.x = Math.random() * (w-minr*2) + minr;
		this.y = Math.random() * (h-minr*2) + minr;
		if(maxr>this.x) maxr = this.x;
		if(maxr>this.y) maxr = this.y;
		if(maxr>w-this.x) maxr = w-this.x;
		if(maxr>h-this.y) maxr = h-this.y;
		this.r = Math.random() * (maxr-minr) + minr;
	}
	
	function setLine(l, x1, y1, x2, y2) {
		l.setAttribute('x1', x1);
		l.setAttribute('y1', y1);
		l.setAttribute('x2', x2);
		l.setAttribute('y2', y2);
	}
	
	function setCircle(c, x, y, r) {
		c.setAttribute('cx', x);
		c.setAttribute('cy', y);
		c.setAttribute('r', r);
	}
	
	var sl = new Line(), el = new Line();
	var sc = new Circle(), ec = new Circle();
	var count = 0, maxcount = 30;
	
	setInterval('animate();', 100);
	
	function animate() {
		var t = count / maxcount;
		var tt = 1-t;
		
		var l = {
			'x' : tt*sl.x + t*el.x,
			'y' : tt*sl.y + t*el.y,
			'theta' : tt*sl.theta + t*el.theta,
		}
		l.a = Math.cos(l.theta);
		l.b = Math.sin(l.theta);

		var c = {
			'x' : tt*sc.x + t*ec.x,
			'y' : tt*sc.y + t*ec.y,
			'r' : tt*sc.r + t*ec.r,
		}
		
		var dx = c.x - l.x;
		var dy = c.y - l.y;
		var d = l.a*dy - l.b*dx;
		var D = c.r*c.r - d*d;
		var L = l.a*dx + l.b*dy;
		
		if(D>=0) {
			var t;
			D = Math.sqrt(D);
			
			t = L+D;
			setCircle($('point1'), l.x+l.a*t, l.y+l.b*t, 5);
			
			t = L-D;
			setCircle($('point2'), l.x+l.a*t, l.y+l.b*t, 5);
		} else {
			setCircle($('point1'), 0, 0, 0);
			setCircle($('point2'), 0, 0, 0);
		}
		
		setLine(line, l.x-(w+h)*l.a, l.y-(w+h)*l.b, l.x+(w+h)*l.a, l.y+(w+h)*l.b);
		setCircle(circle, c.x, c.y, c.r);
		
		count++;
		if(count>maxcount) {
			sl = el;
			sc = ec;
			el = new Line();
			ec = new Circle();
			count = 0;
		}
	}
]]></script>
</svg>
